---
// src/pages/index.astro or src/components/DesignStudio.astro
import { Image } from 'astro:assets';

// Import your images from src/assets - Fix the paths here
import panoramaImg from '../assets/projects/emaar/panorama/main-image.webp';
import theViewsImg from '../assets/projects/emaar/the-views/main-image.webp';
import parkEdgeImg from '../assets/projects/emaar/park-edge/main-image.webp';
import coralTowersImg from '../assets/projects/emaar/coral-towers/main-image.webp';
import pearlReefImg from '../assets/projects/emaar/pearl-reef-towers/main-image.webp';
import aaWaterfrontImg from '../assets/projects/hmr/aa-waterfront/main-image.webp';
import goldCrestImg from '../assets/projects/hmr/gold-crest-residence/main-image.webp';
import hsResidenceImg from '../assets/projects/hmr/hs-residence/main-image.webp';
import h1TowerImg from '../assets/projects/hmr/h1-tower/main-image.webp';
import saimaMarinaImg from '../assets/projects/hmr/saima-marina/main-image.webp';
import saimaWaterfrontImg from '../assets/projects/hmr/saima-waterfront/main-image.webp';
import beachTerraceImg from '../assets/projects/hmr/beach-terraces-by-metro/main-image.webp';

// Project configuration - use imported images
const projects = [
    {
        id: 1,
        number: '001',
        name: 'Panorama',
        location: 'Emaar',
        image: panoramaImg, // Use imported image
    },
    {
        id: 2,
        number: '002',
        name: 'The Views',
        location: 'Emaar',
        image: theViewsImg,
    },
    {
        id: 3,
        number: '003',
        name: 'Park Edge',
        location: 'Emaar',
        image: parkEdgeImg,
    },
    {
        id: 4,
        number: '004',
        name: 'Coral Towers',
        location: 'Emaar',
        image: coralTowersImg,
    },
    {
        id: 5,
        number: '005',
        name: 'Pearl & Reef Towers',
        location: 'Emaar',
        image: pearlReefImg,
    },
    {
        id: 6,
        number: '006',
        name: 'AA Waterfront',
        location: 'HMR',
        image: aaWaterfrontImg,
    },
    {
        id: 7,
        number: '007',
        name: 'Gold Crest Residence',
        location: 'HMR',
        image: goldCrestImg,
    },
    {
        id: 8,
        number: '008',
        name: 'H&S Residence',
        location: 'HMR',
        image: hsResidenceImg,
    },
    {
        id: 9,
        number: '009',
        name: 'H1 Tower',
        location: 'HMR',
        image: h1TowerImg,
    },
    {
        id: 10,
        number: '010',
        name: 'Saima Marina',
        location: 'HMR',
        image: saimaMarinaImg,
    },
    {
        id: 11,
        number: '011',
        name: 'Saima Waterfront',
        location: 'HMR',
        image: saimaWaterfrontImg,
    },
    {
        id: 12,
        number: '012',
        name: 'Beach Terraces By Metro',
        location: 'HMR',
        image: beachTerraceImg,
    },
];

// Animation words for hero text
const heroWords = projects.map(project => project.name.toUpperCase());
---

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600;700&display=swap" rel="stylesheet">
    <title>IND Design Studio</title>
</head>
<body>
    <!-- Navigation -->
    <nav class="nav">
        <div class="nav-left">
            <a href="#" class="nav-link">Projects</a>
        </div>
        <div class="nav-right">
            <a href="#" class="nav-link">Emaar</a>
            <a href="#" class="nav-link">HMR Waterfront</a>
            <a href="#" class="nav-link">About</a>
            <a href="#" class="nav-link">Contact</a>
        </div>
    </nav>

    <!-- Main Content -->
    <main class="main">
        <!-- Animated Text -->
        <div class="hero-text">
            <span class="static-text">BYG</span>
            <span class="animated-text" id="animatedText">PANORAMA</span>
        </div>
    </main>

    <!-- Bottom Navigation -->
    <div class="bottom-nav">
        <a href="#" class="bottom-link">
            Emaar <sup>5</sup>
        </a>
        <a href="#" class="bottom-link">
            HMR <sup>7</sup>
        </a>
       <!-- <a href="#" class="bottom-link">
            Interiors <sup>21</sup>
        </a>  -->
       <!-- <a href="#" class="bottom-link">
            Landscape <sup>9</sup>
        </a>  -->
    </div>

    <!-- Projects Section -->
    <section class="projects-section">
        <!-- Projects List Sidebar -->
        <div class="projects-sidebar" id="projectsSidebar">
            <div class="favorites-section">
                <h3 class="section-title">Projects</h3>
                <div class="favorite-icon">+</div>
            </div>
            
            <div class="projects-list">
                {projects.map((project) => (
                    <div class="project-item" data-project={project.id}>
                        <span class="project-number">{project.number}</span>
                        <div class="project-info">
                            <h4 class="project-name">{project.name}</h4>
                            <p class="project-location">{project.location}</p>
                        </div>
                    </div>
                ))}
            </div>
        </div>

        <!-- Images List Container -->
        <div class="images-container" id="imagesContainer">
            {projects.map((project) => (
                <div class="project-image-item" data-project={project.id}>
                    <Image
                        src={project.image}
                        alt={project.name}
                        width={1200}
                        height={800}
                        quality={90}
                        format="webp"
                        loading="lazy"
                        class="project-image"
                    />
                </div>
            ))}
        </div>
    </section>

    <!-- Your existing styles here -->
    <style>
        /* All your existing CSS styles remain the same */
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Poppins', -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, sans-serif;
            background-color: #ffffff;
            overflow-x: hidden;
        }

        body, html {
            cursor: url('data:image/svg+xml;utf8,<svg width="16" height="16" xmlns="http://www.w3.org/2000/svg"><line x1="8" y1="3" x2="8" y2="13" stroke="black" stroke-width="2"/><line x1="3" y1="8" x2="13" y2="8" stroke="black" stroke-width="2"/></svg>') 8 8, crosshair;
        }

        /* Navigation Styles */
        .nav {
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 20px 40px;
            z-index: 100;
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
        }

        .nav-left,
        .nav-right {
            display: flex;
            gap: 30px;
        }

        .nav-link {
            text-decoration: none;
            color: #666;
            font-size: 14px;
            font-weight: 400;
            transition: color 0.3s ease;
        }

        .nav-link:hover {
            color: #000;
        }

        /* Main Content */
        .main {
            height: 110vh;
            display: flex;
            align-items: center;
            justify-content: flex-start;
            position: relative;
            padding-left: 10vw;
        }

        /* Hero Text */
        .hero-text {
            font-size: clamp(40px, 7vw, 90px);
            font-weight: 500;
            color: #4c4c4c;
            letter-spacing: -0.02em;
            text-align: left;
            position: relative;
            z-index: 2;
        }

        .static-text {
            margin-right: 0.1em;
        }

        .animated-text {
            position: relative;
            display: inline-block;
            min-width: 1em;
            transition: all 0.8s cubic-bezier(0.4, 0, 0.2, 1);
        }

        .animated-text.blur-out {
            filter: blur(10px);
            opacity: 0;
            transform: translateY(-20px);
        }

        .animated-text.blur-in {
            filter: blur(0px);
            opacity: 1;
            transform: translateY(0px);
        }

        /* Bottom Navigation */
        .bottom-nav {
            position: fixed;
            bottom: 40px;
            left: 40px;
            display: flex;
            gap: 40px;
            z-index: 10;
        }

        .bottom-link {
            text-decoration: none;
            color: #999;
            font-size: 14px;
            font-weight: 400;
            transition: color 0.3s ease;
        }

        .bottom-link:hover {
            color: #333;
        }

        .bottom-link sup {
            font-size: 10px;
            margin-left: 2px;
        }

        /* Projects Section */
        .projects-section {
            min-height: 100vh;
            position: relative;
            display: flex;
            padding-top: 12vh;
        }

        /* Projects Sidebar */
        .projects-sidebar {
            position: fixed;
            left: 5vw;
            top: 15vh;
            width: 400px;
            max-height: 70vh;
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(20px);
            border-radius: 16px;
            padding: 30px 25px;
            z-index: 5;
            opacity: 0;
            transform: translateX(-100px);
            will-change: opacity, transform;
            transition: all 0.8s cubic-bezier(0.4, 0, 0.2, 1);
            overflow-y: auto;
            box-shadow: 0 20px 60px rgba(0, 0, 0, 0.1);
        }

        .projects-sidebar.visible {
            opacity: 1;
            transform: translateX(0);
        }

        .favorites-section {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 25px;
            padding-bottom: 15px;
            border-bottom: 1px solid rgba(0, 0, 0, 0.1);
        }

        .section-title {
            font-size: 16px;
            font-weight: 600;
            color: #333;
        }

        .favorite-icon {
            font-size: 18px;
            color: #999;
            cursor: pointer;
            transition: color 0.3s ease;
            width: 24px;
            height: 24px;
            display: flex;
            align-items: center;
            justify-content: center;
            border-radius: 50%;
            background: rgba(0, 0, 0, 0.05);
        }

        .favorite-icon:hover {
            color: #333;
            background: rgba(0, 0, 0, 0.1);
        }

        /* Project Items */
        .project-item {
            display: flex;
            align-items: flex-start;
            padding: 12px 8px;
            cursor: pointer;
            transition: all 0.3s ease;
            border-radius: 8px;
            position: relative;
            margin-bottom: 4px;
        }

        .project-item:hover {
            background-color: rgba(0, 0, 0, 0.05);
            transform: translateX(5px);
        }

        .project-item.active {
            background-color: rgba(0, 0, 0, 0.08);
            transform: translateX(5px);
        }

        .project-number {
            font-size: 11px;
            color: #999;
            margin-right: 12px;
            font-weight: 500;
            min-width: 25px;
            margin-top: 2px;
        }

        .project-info {
            flex: 1;
        }

        .project-name {
            font-size: 13px;
            font-weight: 500;
            color: #333;
            margin-bottom: 3px;
            line-height: 1.4;
        }

        .project-location {
            font-size: 11px;
            color: #999;
            line-height: 1.3;
        }

        /* Images Container */
        .images-container {
            margin-left: 38vw;
            width: 60vw;
            display: flex;
            flex-direction: column;
            gap: 40px;
            padding: 20px 0;
        }

        .project-image-item {
            width: 100%;
            height: 60vh;
            border-radius: 12px;
            overflow: hidden;
            box-shadow: 0 20px 60px rgba(0, 0, 0, 0.15);
            transition: all 0.3s ease;
        }

        .project-image-item:hover {
            transform: translateY(-10px);
            box-shadow: 0 30px 80px rgba(0, 0, 0, 0.2);
        }

        /* Astro Image component styling */
        .project-image {
            width: 100%;
            height: 100%;
            object-fit: cover;
            transition: transform 0.3s ease;
        }

        .project-image-item:hover .project-image {
            transform: scale(1.05);
        }

        /* Custom Scrollbar for Sidebar */
        .projects-sidebar::-webkit-scrollbar {
            width: 4px;
        }

        .projects-sidebar::-webkit-scrollbar-track {
            background: rgba(0, 0, 0, 0.05);
            border-radius: 2px;
        }

        .projects-sidebar::-webkit-scrollbar-thumb {
            background: rgba(0, 0, 0, 0.2);
            border-radius: 2px;
        }

        .projects-sidebar::-webkit-scrollbar-thumb:hover {
            background: rgba(0, 0, 0, 0.3);
        }

        /* Responsive Design */
        @media (max-width: 1024px) {
            .projects-sidebar {
                width: 350px;
                left: 3vw;
            }
            
            .images-container {
                margin-left: 40vw;
                width: 55vw;
            }
        }

        @media (max-width: 768px) {
            .nav {
                padding: 15px 20px;
            }

            .nav-right {
                gap: 15px;
            }

            .bottom-nav {
                bottom: 20px;
                left: 20px;
                gap: 20px;
                flex-wrap: wrap;
            }

            .hero-text {
                font-size: clamp(60px, 15vw, 120px);
            }

            .projects-section {
                flex-direction: column;
                padding-top: 5vh;
            }

            .projects-sidebar {
                position: relative;
                width: 90vw;
                left: 5vw;
                max-height: none;
                margin-bottom: 30px;
            }

            .images-container {
                margin-left: 5vw;
                width: 90vw;
            }

            .project-image-item {
                height: 50vh;
            }
        }
    </style>

    <script define:vars={{ heroWords }}>
        // Animation Script for hero text using passed data
        const words = heroWords;
        let currentIndex = 0;
        const animatedText = document.getElementById("animatedText");

        function changeWord() {
            if (!animatedText) return;
            animatedText.classList.add("blur-out");

            setTimeout(() => {
                if (!animatedText) return;
                currentIndex = (currentIndex + 1) % words.length;
                animatedText.textContent = words[currentIndex];
                animatedText.classList.remove("blur-out");
                animatedText.classList.add("blur-in");

                setTimeout(() => {
                    if (!animatedText) return;
                    animatedText.classList.remove("blur-in");
                }, 800);
            }, 400);
        }

        // Main scroll animation and project interaction
        const projectsSidebar = document.getElementById('projectsSidebar');
        const projectItems = document.querySelectorAll('.project-item');
        const imageItems = document.querySelectorAll('.project-image-item');

        // Project interaction for highlighting
        projectItems.forEach((item, index) => {
            item.addEventListener('click', () => {
                // Remove active class from all items
                projectItems.forEach(pi => pi.classList.remove('active'));
                // Add active class to clicked item
                item.classList.add('active');
                
                // Scroll to corresponding image
                const targetImage = document.querySelector(`[data-project="${item.dataset.project}"]`);
                if (targetImage && targetImage.classList.contains('project-image-item')) {
                    targetImage.scrollIntoView({ 
                        behavior: 'smooth', 
                        block: 'center' 
                    });
                }
            });
        });

        // Scroll handler for sidebar animation
        function handleScroll() {
            const scrollY = window.scrollY;
            const windowHeight = window.innerHeight;
            
            // Show sidebar when user scrolls past the main hero section
            if (scrollY > windowHeight * 0.8) {
                projectsSidebar.classList.add('visible');
            } else {
                projectsSidebar.classList.remove('visible');
            }
        }

        // Highlight sidebar item when scrolling through images
        function highlightActiveProject() {
            const scrollPosition = window.scrollY + window.innerHeight / 2;
            
            imageItems.forEach((image, index) => {
                const rect = image.getBoundingClientRect();
                const imageTop = rect.top + window.scrollY;
                const imageBottom = imageTop + rect.height;
                
                if (scrollPosition >= imageTop && scrollPosition <= imageBottom) {
                    // Remove active from all
                    projectItems.forEach(item => item.classList.remove('active'));
                    // Add active to corresponding sidebar item
                    const correspondingItem = document.querySelector(`.project-item[data-project="${image.dataset.project}"]`);
                    if (correspondingItem) {
                        correspondingItem.classList.add('active');
                    }
                }
            });
        }

        // Throttled scroll handler for better performance
        let ticking = false;
        function requestTick() {
            if (!ticking) {
                requestAnimationFrame(() => {
                    handleScroll();
                    highlightActiveProject();
                });
                ticking = true;
            }
        }

        window.addEventListener('scroll', () => {
            requestTick();
            ticking = false;
        });

        // Initial calls
        handleScroll();
        
        // Start text animation
        setTimeout(() => {
            setInterval(changeWord, 3000);
        }, 2000);
    </script>
</body>
</html>