---
// src/layouts/ProjectLayout.astro - Enhanced with Gallery Modal and Project Navigation
import type { ProjectData } from '../types/project';
import { Image } from 'astro:assets';
import { projects } from '../data/projects.js';

export interface Props {
    project: ProjectData;
}

const { project } = Astro.props;

// Get all projects for navigation dropdown
const allProjects = projects;
---

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>{project.name}</title>
    <meta name="description" content={project.description}>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet">
</head>
<body>
    <!-- Header -->
    <header class="project-header">
        <div class="header-content">
            <div class="header-left">
                <button class="close-btn" onclick="window.history.back()">×</button>
                <div class="project-dropdown">
                    <button class="project-title-btn" id="projectDropdownBtn">
                        {project.name}
                        <svg class="dropdown-arrow" width="12" height="12" viewBox="0 0 12 12" fill="none">
                            <path d="M3 4.5L6 7.5L9 4.5" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
                        </svg>
                    </button>
                    <div class="dropdown-menu" id="projectDropdownMenu">
                        {allProjects.map((proj) => (
                            <a 
                                href={`/projects/${proj.name.toLowerCase().replace(/[\s&]/g, '-').replace(/--+/g, '-')}`}
                                class={`dropdown-item ${proj.name === project.name ? 'active' : ''}`}
                            >
                                <span class="project-number">{proj.number}</span>
                                <span class="project-name">{proj.name}</span>
                                <span class="project-location">{proj.location}</span>
                            </a>
                        ))}
                    </div>
                </div>
            </div>
            <div class="header-right">
                <button class="gallery-btn" id="openGalleryBtn">Gallery</button>
            </div>
        </div>
    </header>

    <main class="project-main">
        <!-- Hero Section -->
        <section class="hero">
            <div class="hero-image-container" onclick="openGalleryModal(0)">
                <Image 
                    src={project.heroImage.src} 
                    alt={project.heroImage.alt}
                    width={1920}
                    height={1080}
                    class="hero-image"
                />
                <div class="image-overlay">
                    <div class="overlay-icon">
                        <svg viewBox="0 0 24 24" fill="none" stroke="currentColor">
                            <circle cx="11" cy="11" r="8"/>
                            <path d="M21 21l-4.35-4.35"/>
                        </svg>
                    </div>
                </div>
            </div>
        </section>

        <!-- Hero Text Overlay -->
        <section class="hero-text-section">
            <div class="hero-text-container">
                <p class="hero-description">
                    {project.description}
                </p>
            </div>
        </section>

        <!-- Project Info Section -->
        <section class="project-info-section">
            <div class="info-container">
                <div class="info-layout">
                    <!-- Left: Project Image -->
                    <div class="info-image-container" onclick="openGalleryModal(0)">
                        <Image 
                            src={project.heroImage.src} 
                            alt={project.heroImage.alt}
                            width={600}
                            height={400}
                            class="info-image"
                        />
                        <div class="image-overlay">
                            <div class="overlay-icon">
                                <svg viewBox="0 0 24 24" fill="none" stroke="currentColor">
                                    <circle cx="11" cy="11" r="8"/>
                                    <path d="M21 21l-4.35-4.35"/>
                                </svg>
                            </div>
                        </div>
                    </div>
                    
                    <!-- Right: Project Details -->
                    <div class="info-content">
                        <div class="info-specs">
                            <div class="spec-row">
                                <span class="spec-label">Typology:</span>
                                <span class="spec-value">{project.info.typology.join(', ')}</span>
                            </div>
                            <div class="spec-row">
                                <span class="spec-label">Status:</span>
                                <span class="spec-value">{project.info.status}</span>
                            </div>
                            <div class="spec-row">
                                <span class="spec-label">Year of design:</span>
                                <span class="spec-value">{project.info.yearOfDesign}</span>
                            </div>
                            <div class="spec-row">
                                <span class="spec-label">Location:</span>
                                <span class="spec-value">{project.info.location}</span>
                            </div>
                            <div class="spec-row">
                                <span class="spec-label">Square:</span>
                                <span class="spec-value">{project.info.square}</span>
                            </div>
                        </div>
                        
                        <div class="about-section">
                            <h3 class="about-title">About project:</h3>
                            <div class="about-text">
                                <p>{project.aboutProject}</p>
                                <button class="read-more-btn">Read more</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </section>

        <!-- ZigZag Gallery Section -->
        <section class="gallery-section">
            <div class="gallery-container">
                {project.galleryImages.map((image, index) => {
                    const isEven = index % 2 === 0;
                    return (
                        <div class={`gallery-item ${isEven ? 'gallery-left' : 'gallery-right'}`}>
                            <div class="gallery-image-wrapper" onclick={`openGalleryModal(${index + 1})`}>
                                <Image 
                                    src={image.src} 
                                    alt={image.alt}
                                    width={1200}
                                    height={800}
                                    class="gallery-image"
                                    loading={index < 2 ? "eager" : "lazy"}
                                />
                                <div class="image-overlay">
                                    <div class="overlay-icon">
                                        <svg viewBox="0 0 24 24" fill="none" stroke="currentColor">
                                            <circle cx="11" cy="11" r="8"/>
                                            <path d="M21 21l-4.35-4.35"/>
                                        </svg>
                                    </div>
                                </div>
                            </div>
                        </div>
                    );
                })}
                
                <!-- View Brochure Section -->
                <div class="brochure-section">
                    <div class="brochure-container">
                        <div class="brochure-content">
                            <h3 class="brochure-title">Interested in {project.name}?</h3>
                            <p class="brochure-description">
                                Download our comprehensive project brochure for detailed information, floor plans, pricing, and exclusive offers.
                            </p>
                            <button class="brochure-btn" onclick="downloadBrochure()">
                                <svg class="brochure-icon" viewBox="0 0 24 24" fill="none" stroke="currentColor">
                                    <path d="M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z"/>
                                    <polyline points="14,2 14,8 20,8"/>
                                    <line x1="16" y1="13" x2="8" y2="13"/>
                                    <line x1="16" y1="17" x2="8" y2="17"/>
                                    <polyline points="10,9 9,9 8,9"/>
                                </svg>
                                View Brochure
                            </button>
                        </div>
                        <div class="brochure-visual">
                            <div class="brochure-mockup">
                                <div class="mockup-cover">
                                    <span class="mockup-title">{project.name}</span>
                                    <span class="mockup-subtitle">Project Brochure</span>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </section>

        <!-- Back Navigation -->
        <section class="navigation-section">
            <div class="nav-container">
                <a href="/projects" class="back-link">← Back to Projects</a>
            </div>
        </section>
    </main>

    <!-- Gallery Modal -->
    <div class="gallery-modal" id="galleryModal">
        <div class="modal-overlay" onclick="closeGalleryModal()">
            <div class="modal-content" onclick="event.stopPropagation()">
                <div class="modal-header">
                    <h3 id="modalTitle">{project.name} Gallery</h3>
                    <button class="modal-close" onclick="closeGalleryModal()">×</button>
                </div>
                
                <div class="modal-body">
                    <div class="main-image-container">
                        <img id="modalMainImage" src="" alt="" />
                        
                        <!-- Navigation Arrows -->
                        <button class="nav-arrow nav-prev" onclick="previousImage()">
                            <svg width="24" height="24" viewBox="0 0 24 24" fill="none">
                                <path d="M15 18L9 12L15 6" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                            </svg>
                        </button>
                        <button class="nav-arrow nav-next" onclick="nextImage()">
                            <svg width="24" height="24" viewBox="0 0 24 24" fill="none">
                                <path d="M9 18L15 12L9 6" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                            </svg>
                        </button>
                        
                        <!-- Image Counter -->
                        <div class="image-counter">
                            <span id="currentImageIndex">1</span> / <span id="totalImages">1</span>
                        </div>
                    </div>
                    
                    <!-- Thumbnails -->
                    <div class="thumbnails-container">
                        <div class="thumbnails-scroll" id="thumbnailsContainer">
                            <!-- Thumbnails will be populated by JavaScript -->
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</body>
</html>

<style>
    * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
    }

    body {
        font-family: 'Poppins', -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif !important;
        line-height: 1.6;
        color: #333;
        background: #ffffff;
    }

    /* Header */
    .project-header {
        position: fixed;
        top: 0;
        left: 0;
        right: 0;
        background: rgba(255, 255, 255, 0.95);
        backdrop-filter: blur(10px);
        z-index: 1000;
        padding: 20px 40px;
        border-bottom: 1px solid rgba(0, 0, 0, 0.1);
    }

    .header-content {
        display: flex;
        justify-content: space-between;
        align-items: center;
        max-width: 1400px;
        margin: 0 auto;
    }

    .header-left {
        display: flex;
        align-items: center;
        gap: 20px;
    }

    .close-btn {
        background: none;
        border: none;
        font-size: 24px;
        color: #999;
        cursor: pointer;
        padding: 5px;
        transition: color 0.3s ease;
        font-family: inherit;
    }

    .close-btn:hover {
        color: #333;
    }

    /* Project Dropdown */
    .project-dropdown {
        position: relative;
    }

    .project-title-btn {
        background: none;
        border: none;
        font-size: 18px;
        font-weight: 500;
        color: #333;
        cursor: pointer;
        display: flex;
        align-items: center;
        gap: 8px;
        padding: 8px 12px;
        border-radius: 6px;
        transition: all 0.3s ease;
        font-family: 'Poppins', sans-serif;
    }

    .project-title-btn:hover {
        background: #f5f5f5;
    }

    .dropdown-arrow {
        transition: transform 0.3s ease;
    }

    .project-title-btn.active .dropdown-arrow {
        transform: rotate(180deg);
    }

    .dropdown-menu {
        position: absolute;
        top: 100%;
        left: 0;
        background: white;
        border: 1px solid #e0e0e0;
        border-radius: 8px;
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
        min-width: 300px;
        max-height: 400px;
        overflow-y: auto;
        opacity: 0;
        visibility: hidden;
        transform: translateY(-10px);
        transition: all 0.3s ease;
        z-index: 1001;
    }

    .dropdown-menu.show {
        opacity: 1;
        visibility: visible;
        transform: translateY(0);
    }

    .dropdown-item {
        display: flex;
        align-items: center;
        gap: 12px;
        padding: 12px 16px;
        text-decoration: none;
        color: #333;
        transition: background 0.3s ease;
        border-bottom: 1px solid #f0f0f0;
        font-family: 'Poppins', sans-serif;
    }

    .dropdown-item:last-child {
        border-bottom: none;
    }

    .dropdown-item:hover {
        background: #f8f9fa;
    }

    .dropdown-item.active {
        background: #667eea;
        color: white;
    }

    .project-number {
        font-size: 12px;
        color: #999;
        min-width: 30px;
        font-weight: 500;
    }

    .dropdown-item.active .project-number {
        color: rgba(255, 255, 255, 0.8);
    }

    .project-name {
        flex: 1;
        font-size: 14px;
        font-weight: 500;
    }

    .project-location {
        font-size: 12px;
        color: #666;
        font-weight: 400;
    }

    .dropdown-item.active .project-location {
        color: rgba(255, 255, 255, 0.9);
    }

    .header-right {
        display: flex;
        align-items: center;
    }

    .gallery-btn {
        background: none;
        border: none;
        color: #999;
        font-size: 14px;
        font-weight: 400;
        cursor: pointer;
        padding: 8px 12px;
        border-radius: 6px;
        transition: all 0.3s ease;
        font-family: 'Poppins', sans-serif;
    }

    .gallery-btn:hover {
        color: #333;
        background: #f5f5f5;
    }

    /* Image Overlays */
    .image-overlay {
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: rgba(0, 0, 0, 0.4);
        display: flex;
        align-items: center;
        justify-content: center;
        opacity: 0;
        transition: opacity 0.3s ease;
        cursor: pointer;
    }

    .hero-image-container:hover .image-overlay,
    .info-image-container:hover .image-overlay,
    .gallery-image-wrapper:hover .image-overlay {
        opacity: 1;
    }

    .overlay-icon {
        color: white;
        background: rgba(255, 255, 255, 0.2);
        padding: 16px;
        border-radius: 50%;
        backdrop-filter: blur(10px);
        transition: all 0.3s ease;
    }

    .overlay-icon svg {
        width: 24px;
        height: 24px;
        stroke-width: 1.5;
    }

    .image-overlay:hover .overlay-icon {
        background: rgba(255, 255, 255, 0.3);
        transform: scale(1.1);
    }

    /* Main Content */
    .project-main {
        margin-top: 80px;
    }

    /* Hero Section */
    .hero {
        width: 100%;
        height: 100vh;
        position: relative;
        overflow: hidden;
    }

    .hero-image-container {
        width: 100%;
        height: 100%;
        position: relative;
        cursor: pointer;
    }

    .hero-image {
        width: 100%;
        height: 100%;
        object-fit: cover;
        object-position: center;
    }

    /* Hero Text Section */
    .hero-text-section {
        padding: 80px 0;
        background: #fff;
    }

    .hero-text-container {
        max-width: 1400px;
        margin: 0 auto;
        padding: 0 40px;
        text-align: center;
    }

    .hero-description {
        font-size: clamp(24px, 4vw, 32px);
        font-weight: 400;
        line-height: 1.4;
        color: #4c4c4c;
        max-width: 900px;
        margin: 0 auto;
        font-family: 'Poppins', sans-serif;
    }

    /* Project Info Section */
    .project-info-section {
        padding: 80px 0;
        background: #fff;
    }

    .info-container {
        max-width: 1400px;
        margin: 0 auto;
        padding: 0 40px;
    }

    .info-layout {
        display: grid;
        grid-template-columns: 1fr 1fr;
        gap: 100px;
        align-items: start;
    }

    .info-image-container {
        position: sticky;
        top: 120px;
        cursor: pointer;
    }

    .info-image {
        width: 100%;
        height: auto;
        display: block;
        border-radius: 8px;
    }

    .info-content {
        padding-top: 20px;
    }

    .info-specs {
        margin-bottom: 60px;
    }

    .spec-row {
        display: flex;
        padding: 15px 0;
        border-bottom: 1px solid #f0f0f0;
        align-items: baseline;
    }

    .spec-row:last-child {
        border-bottom: none;
    }

    .spec-label {
        font-weight: 500;
        color: #333;
        min-width: 150px;
        font-size: 14px;
        font-family: 'Poppins', sans-serif;
    }

    .spec-value {
        font-weight: 400;
        color: #666;
        font-size: 14px;
        flex: 1;
        font-family: 'Poppins', sans-serif;
    }

    .about-section {
        padding-top: 20px;
    }

    .about-title {
        font-size: 16px;
        font-weight: 500;
        margin-bottom: 20px;
        color: #333;
        font-family: 'Poppins', sans-serif;
    }

    .about-text p {
        font-size: 14px;
        line-height: 1.7;
        color: #666;
        margin-bottom: 20px;
        font-family: 'Poppins', sans-serif;
    }

    .read-more-btn {
        background: none;
        border: none;
        color: #999;
        font-size: 14px;
        cursor: pointer;
        text-decoration: underline;
        padding: 0;
        font-family: 'Poppins', sans-serif;
        transition: color 0.3s ease;
    }

    .read-more-btn:hover {
        color: #333;
    }

    /* ZigZag Gallery Section */
    .gallery-section {
        padding: 100px 0;
        background: #fff;
    }

    .gallery-container {
        max-width: 1400px;
        margin: 0 auto;
        padding: 0 40px;
        display: flex;
        flex-direction: column;
        gap: 80px;
    }

    .gallery-item {
        width: 100%;
        display: flex;
    }

    .gallery-left {
        justify-content: flex-start;
    }

    .gallery-left .gallery-image-wrapper {
        max-width: 75%;
        width: 100%;
    }

    .gallery-right {
        justify-content: flex-end;
    }

    .gallery-right .gallery-image-wrapper {
        max-width: 75%;
        width: 100%;
    }

    .gallery-image-wrapper {
        position: relative;
        overflow: hidden;
        border-radius: 12px;
        box-shadow: 0 20px 60px rgba(0, 0, 0, 0.1);
        transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
        cursor: pointer;
    }

    .gallery-item:hover .gallery-image-wrapper {
        transform: translateY(-10px);
        box-shadow: 0 40px 100px rgba(0, 0, 0, 0.2);
    }

    .gallery-image {
        width: 100%;
        height: auto;
        display: block;
        transition: transform 0.6s cubic-bezier(0.4, 0, 0.2, 1);
    }

    .gallery-item:hover .gallery-image {
        transform: scale(1.05);
    }

    /* Brochure Section */
    .brochure-section {
        margin-top: 100px;
        padding: 80px 0;
        background: linear-gradient(135deg, #f8f9fa 0%, #ffffff 100%);
        border-radius: 20px;
        margin-bottom: 40px;
    }

    .brochure-container {
        display: grid;
        grid-template-columns: 1fr 1fr;
        gap: 60px;
        align-items: center;
        max-width: 1000px;
        margin: 0 auto;
        padding: 0 40px;
    }

    .brochure-content {
        text-align: left;
    }

    .brochure-title {
        font-size: clamp(24px, 3vw, 32px);
        font-weight: 600;
        color: #333;
        margin-bottom: 20px;
        font-family: 'Poppins', sans-serif;
    }

    .brochure-description {
        font-size: 16px;
        color: #666;
        line-height: 1.6;
        margin-bottom: 30px;
        font-family: 'Poppins', sans-serif;
    }

    .brochure-btn {
        display: inline-flex;
        align-items: center;
        gap: 12px;
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
        border: none;
        padding: 16px 32px;
        border-radius: 12px;
        font-size: 16px;
        font-weight: 500;
        cursor: pointer;
        transition: all 0.3s ease;
        font-family: 'Poppins', sans-serif;
        box-shadow: 0 4px 15px rgba(102, 126, 234, 0.3);
    }

    .brochure-btn:hover {
        transform: translateY(-2px);
        box-shadow: 0 8px 25px rgba(102, 126, 234, 0.4);
    }

    .brochure-icon {
        width: 20px;
        height: 20px;
        stroke-width: 2;
    }

    .brochure-visual {
        display: flex;
        justify-content: center;
        align-items: center;
    }

    .brochure-mockup {
        width: 200px;
        height: 280px;
        background: white;
        border-radius: 12px;
        box-shadow: 0 20px 60px rgba(0, 0, 0, 0.15);
        overflow: hidden;
        position: relative;
        transform: perspective(1000px) rotateY(-10deg) rotateX(5deg);
        transition: transform 0.3s ease;
    }

    .brochure-mockup:hover {
        transform: perspective(1000px) rotateY(-5deg) rotateX(2deg) scale(1.05);
    }

    .mockup-cover {
        width: 100%;
        height: 100%;
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        display: flex;
        flex-direction: column;
        justify-content: flex-end;
        padding: 30px 20px;
        color: white;
        position: relative;
    }

    .mockup-cover::before {
        content: '';
        position: absolute;
        top: 20px;
        left: 20px;
        right: 20px;
        height: 120px;
        background: rgba(255, 255, 255, 0.1);
        border-radius: 8px;
    }

    .mockup-title {
        font-size: 18px;
        font-weight: 600;
        margin-bottom: 8px;
        font-family: 'Poppins', sans-serif;
    }

    /* Navigation Section */
    .navigation-section {
        padding: 60px 0;
        background: #fff;
    }
    .navigation-section {
        padding: 60px 0;
        background: #fff;
    }

    .nav-container {
        max-width: 1400px;
        margin: 0 auto;
        padding: 0 40px;
    }

    .back-link {
        display: inline-block;
        color: #666;
        text-decoration: none;
        font-weight: 400;
        font-size: 14px;
        transition: color 0.3s ease;
        font-family: 'Poppins', sans-serif;
    }

    .back-link:hover {
        color: #333;
    }

    /* Gallery Modal */
    .gallery-modal {
        position: fixed;
        top: 0;
        left: 0;
        width: 100vw;
        height: 100vh;
        z-index: 2000;
        display: none;
        align-items: center;
        justify-content: center;
    }

    .gallery-modal.show {
        display: flex;
    }

    .modal-overlay {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0, 0, 0, 0.9);
        backdrop-filter: blur(10px);
    }

    .modal-content {
        position: relative;
        max-width: 95vw;
        max-height: 95vh;
        background: white;
        border-radius: 16px;
        overflow: hidden;
        box-shadow: 0 40px 100px rgba(0, 0, 0, 0.3);
        display: flex;
        flex-direction: column;
    }

    .modal-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 20px 30px;
        border-bottom: 1px solid rgba(0, 0, 0, 0.1);
        background: white;
    }

    .modal-header h3 {
        margin: 0;
        font-size: 18px;
        font-weight: 500;
        color: #333;
        font-family: 'Poppins', sans-serif;
    }

    .modal-close {
        background: none;
        border: none;
        font-size: 24px;
        cursor: pointer;
        color: #666;
        padding: 5px;
        border-radius: 50%;
        transition: all 0.3s ease;
        font-family: inherit;
    }

    .modal-close:hover {
        background: #f0f0f0;
        color: #333;
    }

    .modal-body {
        display: flex;
        flex-direction: column;
        flex: 1;
        min-height: 0;
    }

    .main-image-container {
        position: relative;
        flex: 1;
        display: flex;
        align-items: center;
        justify-content: center;
        background: #f8f9fa;
        min-height: 400px;
    }

    #modalMainImage {
        max-width: 100%;
        max-height: 100%;
        object-fit: contain;
        user-select: none;
    }

    .nav-arrow {
        position: absolute;
        top: 50%;
        transform: translateY(-50%);
        background: rgba(255, 255, 255, 0.9);
        border: none;
        width: 50px;
        height: 50px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        cursor: pointer;
        transition: all 0.3s ease;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
        color: #333;
    }

    .nav-arrow:hover {
        background: white;
        transform: translateY(-50%) scale(1.1);
        box-shadow: 0 6px 20px rgba(0, 0, 0, 0.15);
    }

    .nav-prev {
        left: 20px;
    }

    .nav-next {
        right: 20px;
    }

    .image-counter {
        position: absolute;
        bottom: 20px;
        left: 50%;
        transform: translateX(-50%);
        background: rgba(0, 0, 0, 0.7);
        color: white;
        padding: 8px 16px;
        border-radius: 20px;
        font-size: 14px;
        font-weight: 500;
        font-family: 'Poppins', sans-serif;
    }

    .thumbnails-container {
        background: white;
        border-top: 1px solid rgba(0, 0, 0, 0.1);
        padding: 20px;
        max-height: 150px;
        overflow: hidden;
    }

    .thumbnails-scroll {
        display: flex;
        gap: 12px;
        overflow-x: auto;
        padding-bottom: 10px;
    }

    .thumbnail {
        flex-shrink: 0;
        width: 80px;
        height: 60px;
        border-radius: 6px;
        overflow: hidden;
        cursor: pointer;
        border: 2px solid transparent;
        transition: all 0.3s ease;
    }

    .thumbnail:hover,
    .thumbnail.active {
        border-color: #667eea;
        transform: scale(1.05);
    }

    .thumbnail img {
        width: 100%;
        height: 100%;
        object-fit: cover;
    }

    /* Responsive Design */
    @media (max-width: 1024px) {
        .info-layout {
            grid-template-columns: 1fr;
            gap: 60px;
        }

        .info-image-container {
            position: static;
        }

        .gallery-container {
            gap: 60px;
            padding: 0 30px;
        }

        .gallery-left .gallery-image-wrapper,
        .gallery-right .gallery-image-wrapper {
            max-width: 85%;
        }

        .hero-text-container,
        .info-container,
        .nav-container {
            padding: 0 30px;
        }

        .dropdown-menu {
            min-width: 280px;
        }

        .brochure-container {
            grid-template-columns: 1fr;
            gap: 40px;
            text-align: center;
            padding: 0 30px;
        }

        .brochure-content {
            text-align: center;
        }

        .brochure-section {
            margin-top: 60px;
            padding: 60px 0;
        }
    }

    @media (max-width: 768px) {
        .project-header {
            padding: 15px 20px;
        }

        .project-main {
            margin-top: 70px;
        }

        .hero {
            height: 70vh;
        }

        .hero-text-section {
            padding: 60px 0;
        }

        .project-info-section {
            padding: 60px 0;
        }

        .gallery-section {
            padding: 80px 0;
        }

        .gallery-container {
            gap: 40px;
            padding: 0 20px;
        }

        .gallery-left,
        .gallery-right {
            justify-content: center;
        }

        .gallery-left .gallery-image-wrapper,
        .gallery-right .gallery-image-wrapper {
            max-width: 100%;
        }

        .hero-text-container,
        .info-container,
        .nav-container {
            padding: 0 20px;
        }

        .spec-row {
            flex-direction: column;
            align-items: flex-start;
            gap: 8px;
            padding: 20px 0;
        }

        .spec-label {
            min-width: auto;
            font-weight: 600;
        }

        .dropdown-menu {
            min-width: 250px;
        }

        .brochure-container {
            padding: 0 20px;
        }

        .brochure-mockup {
            width: 160px;
            height: 220px;
        }

        .mockup-title {
            font-size: 16px;
        }

        .mockup-subtitle {
            font-size: 12px;
        }

        .nav-arrow {
            width: 40px;
            height: 40px;
        }

        .nav-prev {
            left: 10px;
        }

        .nav-next {
            right: 10px;
        }

        .modal-content {
            max-width: 98vw;
            max-height: 98vh;
        }

        .thumbnails-container {
            padding: 15px;
        }
    }

    @media (max-width: 480px) {
        .project-title-btn {
            font-size: 16px;
        }

        .hero-description {
            font-size: 20px;
        }

        .gallery-container {
            gap: 30px;
            padding: 0 15px;
        }

        .gallery-image-wrapper {
            border-radius: 8px;
        }

        .project-info-section,
        .gallery-section {
            padding: 60px 0;
        }

        .hero-text-section {
            padding: 40px 0;
        }

        .hero-text-container,
        .info-container,
        .nav-container {
            padding: 0 15px;
        }

        .dropdown-menu {
            min-width: 220px;
        }

        .brochure-container {
            padding: 0 15px;
        }

        .brochure-section {
            margin-top: 40px;
            padding: 40px 0;
        }

        .brochure-mockup {
            width: 140px;
            height: 200px;
        }

        .brochure-btn {
            padding: 14px 24px;
            font-size: 15px;
        }

        .modal-header {
            padding: 15px 20px;
        }
    }

    /* Animation delays for gallery items */
    .gallery-item {
        opacity: 0;
        transform: translateY(40px);
        animation: fadeInUp 0.8s ease-out forwards;
    }

    .gallery-item:nth-child(1) { animation-delay: 0.1s; }
    .gallery-item:nth-child(2) { animation-delay: 0.2s; }
    .gallery-item:nth-child(3) { animation-delay: 0.3s; }
    .gallery-item:nth-child(4) { animation-delay: 0.4s; }
    .gallery-item:nth-child(5) { animation-delay: 0.5s; }
    .gallery-item:nth-child(6) { animation-delay: 0.6s; }

    @keyframes fadeInUp {
        from {
            opacity: 0;
            transform: translateY(40px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    /* Smooth Scrolling */
    html {
        scroll-behavior: smooth;
    }
</style>

<script define:vars={{ allProjects, project }}>
    // Global variables
    let currentImageIndex = 0;
    let galleryImages = [];
    let isModalOpen = false;

    // Initialize gallery images array (hero + gallery images)
    function initializeGallery() {
        galleryImages = [
            {
                src: project.heroImage.src.src || project.heroImage.src,
                alt: project.heroImage.alt
            },
            ...project.galleryImages.map(img => ({
                src: img.src.src || img.src,
                alt: img.alt
            }))
        ];
    }

    // Project dropdown functionality
    function initializeDropdown() {
        const dropdownBtn = document.getElementById('projectDropdownBtn');
        const dropdownMenu = document.getElementById('projectDropdownMenu');
        
        if (!dropdownBtn || !dropdownMenu) return;

        dropdownBtn.addEventListener('click', function(e) {
            e.stopPropagation();
            const isOpen = dropdownMenu.classList.contains('show');
            
            if (isOpen) {
                closeDropdown();
            } else {
                openDropdown();
            }
        });

        // Close dropdown when clicking outside
        document.addEventListener('click', function(e) {
            if (!dropdownBtn.contains(e.target) && !dropdownMenu.contains(e.target)) {
                closeDropdown();
            }
        });

        // Close dropdown on escape key
        document.addEventListener('keydown', function(e) {
            if (e.key === 'Escape') {
                closeDropdown();
            }
        });
    }

    function openDropdown() {
        const dropdownBtn = document.getElementById('projectDropdownBtn');
        const dropdownMenu = document.getElementById('projectDropdownMenu');
        
        dropdownBtn.classList.add('active');
        dropdownMenu.classList.add('show');
    }

    function closeDropdown() {
        const dropdownBtn = document.getElementById('projectDropdownBtn');
        const dropdownMenu = document.getElementById('projectDropdownMenu');
        
        dropdownBtn.classList.remove('active');
        dropdownMenu.classList.remove('show');
    }

    // Gallery modal functionality
    window.openGalleryModal = function(imageIndex = 0) {
        const modal = document.getElementById('galleryModal');
        if (!modal) return;

        currentImageIndex = imageIndex;
        isModalOpen = true;
        
        modal.classList.add('show');
        document.body.style.overflow = 'hidden';
        
        updateModalImage();
        createThumbnails();
        
        // Add keyboard navigation
        document.addEventListener('keydown', handleKeyboardNavigation);
    };

    window.closeGalleryModal = function() {
        const modal = document.getElementById('galleryModal');
        if (!modal) return;

        isModalOpen = false;
        modal.classList.remove('show');
        document.body.style.overflow = '';
        
        // Remove keyboard navigation
        document.removeEventListener('keydown', handleKeyboardNavigation);
    };

    function updateModalImage() {
        const modalImage = document.getElementById('modalMainImage');
        const currentIndexEl = document.getElementById('currentImageIndex');
        const totalImagesEl = document.getElementById('totalImages');
        
        if (!modalImage || !galleryImages[currentImageIndex]) return;

        modalImage.src = galleryImages[currentImageIndex].src;
        modalImage.alt = galleryImages[currentImageIndex].alt;
        
        if (currentIndexEl) {
            currentIndexEl.textContent = currentImageIndex + 1;
        }
        
        if (totalImagesEl) {
            totalImagesEl.textContent = galleryImages.length;
        }

        updateActiveThumbnail();
    }

    function createThumbnails() {
        const container = document.getElementById('thumbnailsContainer');
        if (!container) return;

        container.innerHTML = '';
        
        galleryImages.forEach((image, index) => {
            const thumbnail = document.createElement('div');
            thumbnail.className = `thumbnail ${index === currentImageIndex ? 'active' : ''}`;
            thumbnail.innerHTML = `<img src="${image.src}" alt="${image.alt}" />`;
            thumbnail.onclick = () => selectImage(index);
            container.appendChild(thumbnail);
        });
    }

    function updateActiveThumbnail() {
        const thumbnails = document.querySelectorAll('.thumbnail');
        thumbnails.forEach((thumb, index) => {
            thumb.classList.toggle('active', index === currentImageIndex);
        });
    }

    function selectImage(index) {
        if (index >= 0 && index < galleryImages.length) {
            currentImageIndex = index;
            updateModalImage();
        }
    }

    window.previousImage = function() {
        const newIndex = currentImageIndex > 0 ? currentImageIndex - 1 : galleryImages.length - 1;
        selectImage(newIndex);
    };

    window.nextImage = function() {
        const newIndex = currentImageIndex < galleryImages.length - 1 ? currentImageIndex + 1 : 0;
        selectImage(newIndex);
    };

    function handleKeyboardNavigation(e) {
        if (!isModalOpen) return;
        
        switch(e.key) {
            case 'Escape':
                closeGalleryModal();
                break;
            case 'ArrowLeft':
                e.preventDefault();
                previousImage();
                break;
            case 'ArrowRight':
                e.preventDefault();
                nextImage();
                break;
        }
    }

    // Parallax effect for hero
    function initializeParallax() {
        let ticking = false;

        function updateParallax() {
            const scrolled = window.pageYOffset;
            const heroImage = document.querySelector('.hero-image');
            
            if (heroImage) {
                const rate = scrolled * 0.5;
                heroImage.style.transform = `translateY(${rate}px)`;
            }
            
            ticking = false;
        }

        function requestTick() {
            if (!ticking) {
                requestAnimationFrame(updateParallax);
                ticking = true;
            }
        }

        window.addEventListener('scroll', requestTick, { passive: true });
    }

    // Read more functionality
    function initializeReadMore() {
        const readMoreBtn = document.querySelector('.read-more-btn');
        if (!readMoreBtn) return;

        readMoreBtn.addEventListener('click', function() {
            const aboutText = document.querySelector('.about-text p');
            if (aboutText) {
                const isExpanded = aboutText.style.maxHeight && aboutText.style.maxHeight !== 'none';
                aboutText.style.maxHeight = isExpanded ? 'none' : '4.2em';
                aboutText.style.overflow = isExpanded ? 'visible' : 'hidden';
                this.textContent = isExpanded ? 'Read more' : 'Read less';
            }
        });

        // Set initial state
        const aboutText = document.querySelector('.about-text p');
        if (aboutText) {
            aboutText.style.maxHeight = '4.2em';
            aboutText.style.overflow = 'hidden';
        }
    }

    // Gallery button functionality
    function initializeGalleryButton() {
        const galleryBtn = document.getElementById('openGalleryBtn');
        if (galleryBtn) {
            galleryBtn.addEventListener('click', () => openGalleryModal(0));
        }
    }

    // Intersection Observer for gallery animations
    function initializeAnimations() {
        const observerOptions = {
            threshold: 0.1,
            rootMargin: '0px 0px -50px 0px'
        };

        const observer = new IntersectionObserver((entries) => {
            entries.forEach(entry => {
                if (entry.isIntersecting) {
                    entry.target.style.animationPlayState = 'running';
                }
            });
        }, observerOptions);

        document.querySelectorAll('.gallery-item').forEach(item => {
            observer.observe(item);
        });
    }

    // Smooth scroll for internal links
    function initializeSmoothScroll() {
        document.querySelectorAll('a[href^="#"]').forEach(anchor => {
            anchor.addEventListener('click', function (e) {
                e.preventDefault();
                const target = document.querySelector(this.getAttribute('href'));
                if (target) {
                    const offsetTop = target.offsetTop - 100;
                    window.scrollTo({
                        top: offsetTop,
                        behavior: 'smooth'
                    });
                }
            });
        });
    }

    // Touch/swipe support for mobile
    function initializeTouchSupport() {
        let startX = 0;
        let startY = 0;
        
        const modalImage = document.getElementById('modalMainImage');
        if (!modalImage) return;

        modalImage.addEventListener('touchstart', function(e) {
            startX = e.touches[0].clientX;
            startY = e.touches[0].clientY;
        }, { passive: true });

        modalImage.addEventListener('touchend', function(e) {
            if (!isModalOpen) return;
            
            const endX = e.changedTouches[0].clientX;
            const endY = e.changedTouches[0].clientY;
            
            const deltaX = endX - startX;
            const deltaY = endY - startY;
            
            // Check if horizontal swipe is longer than vertical
            if (Math.abs(deltaX) > Math.abs(deltaY) && Math.abs(deltaX) > 50) {
                if (deltaX > 0) {
                    previousImage();
                } else {
                    nextImage();
                }
            }
        }, { passive: true });
    }

    // Download brochure functionality
    window.downloadBrochure = function() {
        // You can replace this with actual download logic
        // For now, it shows an alert - replace with actual PDF download
        const projectName = project.name;
        
        // Example: Trigger download of a PDF file
        // window.open(`/brochures/${projectName.toLowerCase().replace(/[\s&]/g, '-')}.pdf`, '_blank');
        
        // For demo purposes, show alert
        alert(`Downloading ${projectName} brochure... \n\nNote: Replace this alert with actual PDF download functionality.`);
        
        // You could also open a contact form or email
        // window.location.href = `mailto:info@bygproperties.com?subject=Brochure Request for ${projectName}&body=I would like to receive the brochure for ${projectName}.`;
    };
    function initialize() {
        initializeGallery();
        initializeDropdown();
        initializeParallax();
        initializeReadMore();
        initializeGalleryButton();
        initializeAnimations();
        initializeSmoothScroll();
        initializeTouchSupport();
    }

    // Run initialization
    if (document.readyState === 'loading') {
        document.addEventListener('DOMContentLoaded', initialize);
    } else {
        initialize();
    }
</script>