---
// src/components/ProjectsSidebar.astro
import { projects } from '../data/projects.js';

const currentPath = Astro.url.pathname;
const isProjectsPage = currentPath === '/projects' || currentPath === '/projects/';
---

<!-- Desktop Only Sidebar -->
<div class="projects-sidebar desktop-sidebar-only" id="projectsSidebar">
  <div class="favorites-section">
    <h3 class="section-title">Projects</h3>
  </div>
  
  <div class="projects-list">
    {projects.map((project, index) => (
      isProjectsPage ? (
        <div 
          class="project-item" 
          data-project={project.id} 
          data-scroll-target={`project-${project.id}`}
          data-project-index={index}
        >
          <span class="project-number">{project.number}</span>
          <div class="project-info">
            <h4 class="project-name">{project.name}</h4>
            <p class="project-location">{project.location}</p>
          </div>
        </div>
      ) : (
        <a 
          href={`/projects#project-${project.id}`}
          class="project-item" 
          data-project={project.id}
        >
          <span class="project-number">{project.number}</span>
          <div class="project-info">
            <h4 class="project-name">{project.name}</h4>
            <p class="project-location">{project.location}</p>
          </div>
        </a>
      )
    ))}
  </div>
</div>

<script>
  // Handle sidebar clicks on projects page
  const currentPath = window.location.pathname;
  if (currentPath.includes('/projects')) {
    document.addEventListener('DOMContentLoaded', () => {
      const projectItems = document.querySelectorAll('.projects-sidebar .project-item');
      
      projectItems.forEach(item => {
        item.addEventListener('click', () => {
          const projectIndex = parseInt(item.dataset.projectIndex);
          const targetSection = document.querySelectorAll('.project-section')[projectIndex];
          
          if (targetSection) {
            targetSection.scrollIntoView({ behavior: 'smooth', block: 'start' });
          }
        });
      });
      
      // Update active state based on scroll
      const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
          if (entry.isIntersecting) {
            const projectId = entry.target.dataset.projectId;
            
            // Update active state in sidebar
            projectItems.forEach(item => {
              if (item.dataset.project === projectId) {
                item.classList.add('active');
              } else {
                item.classList.remove('active');
              }
            });
          }
        });
      }, {
        root: null,
        rootMargin: '-50% 0px -50% 0px',
        threshold: 0
      });
      
      document.querySelectorAll('.project-section').forEach(section => {
        observer.observe(section);
      });
    });
  }
</script>

<style>
  .projects-sidebar {
    position: fixed;
    left: 5vw;
    top: 15vh;
    width: 400px;
    max-height: 70vh;
    background: rgba(255, 255, 255, 0.95);
    backdrop-filter: blur(20px);
    border-radius: 16px;
    padding: 30px 25px;
    z-index: 5;
    opacity: 0;
    transform: translateX(-100px);
    will-change: opacity, transform;
    overflow-y: auto;
    box-shadow: 0 20px 60px rgba(0, 0, 0, 0.1);
  }

  .projects-sidebar.visible {
    /* These styles are now handled by JavaScript for smoother control */
  }

  .favorites-section {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 25px;
    padding-bottom: 15px;
    border-bottom: 1px solid rgba(0, 0, 0, 0.1);
  }

  .section-title {
    font-size: 16px;
    font-weight: 600;
    color: #333;
  }

  .project-item {
    display: flex;
    align-items: flex-start;
    padding: 12px 8px;
    cursor: pointer;
    transition: all 0.3s ease;
    border-radius: 8px;
    position: relative;
    margin-bottom: 4px;
    text-decoration: none;
    color: inherit;
  }

  .project-item:hover {
    background-color: rgba(0, 0, 0, 0.05);
    transform: translateX(5px);
  }

  .project-item.active {
    background-color: rgba(0, 0, 0, 0.08);
    transform: translateX(5px);
  }

  .project-number {
    font-size: 11px;
    color: #999;
    margin-right: 12px;
    font-weight: 500;
    min-width: 25px;
    margin-top: 2px;
  }

  .project-info {
    flex: 1;
  }

  .project-name {
    font-size: 13px;
    font-weight: 500;
    color: #333;
    margin-bottom: 3px;
    line-height: 1.4;
  }

  .project-location {
    font-size: 11px;
    color: #999;
    line-height: 1.3;
  }

  .projects-sidebar::-webkit-scrollbar {
    width: 4px;
  }

  .projects-sidebar::-webkit-scrollbar-track {
    background: rgba(0, 0, 0, 0.05);
    border-radius: 2px;
  }

  .projects-sidebar::-webkit-scrollbar-thumb {
    background: rgba(0, 0, 0, 0.2);
    border-radius: 2px;
  }

  .projects-sidebar::-webkit-scrollbar-thumb:hover {
    background: rgba(0, 0, 0, 0.3);
  }

  @media (max-width: 1024px) {
    .projects-sidebar {
      width: 350px;
      left: 3vw;
    }
  }

  /* Hide sidebar completely on mobile */
  @media (max-width: 768px) {
    .desktop-sidebar-only {
      display: none !important;
    }
  }
</style>